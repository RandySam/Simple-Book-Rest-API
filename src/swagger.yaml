openapi: 3.0.0
info:
  title: Simple Book REST API
  version: 1.0.0
  description: REST API for managing books and authors

servers:
  - url: http://localhost:8080

paths:
  /book:
    get:
      summary: Get all books
      parameters:
        - name: title
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookListResponse'
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCreateRequest'
      responses:
        '201':
          description: Book created

  /book/{bookId}:
    get:
      summary: Get book detail
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Book detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDetailResponse'
    put:
      summary: Update book
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookUpdateRequest'
      responses:
        '200':
          description: Book updated
    delete:
      summary: Delete book
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Book deleted

  /v1/author:
    post:
      summary: Create new author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorCreateRequest'
      responses:
        '201':
          description: Author created

  /author/{authorId}/book:
    get:
      summary: Get books by author
      parameters:
        - name: authorId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of books by author
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorBookResponse'

components:
  schemas:
    BookCreateRequest:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        description:
          type: string

    BookUpdateRequest:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        description:
          type: string

    BookListResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string

    BookDetailResponse:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        description:
          type: string

    AuthorCreateRequest:
      type: object
      properties:
        name:
          type: string
        birthDate:
          type: string
          format: date

    AuthorBookResponse:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
